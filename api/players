// Simple in-memory storage
const tournamentData = {
  players: [],
  payments: [],
  lastUpdated: new Date().toISOString(),
}

export default async function handler(req, res) {
  // Set CORS headers
  res.setHeader("Access-Control-Allow-Origin", "*")
  res.setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
  res.setHeader("Access-Control-Allow-Headers", "Content-Type")

  if (req.method === "OPTIONS") {
    return res.status(200).end()
  }

  try {
    switch (req.method) {
      case "GET":
        return res.status(200).json(tournamentData)

      case "POST":
        const { player, source = "manual" } = req.body

        if (!player || !player.name) {
          return res.status(400).json({ error: "Player name is required" })
        }

        const newPlayer = {
          id: Date.now(),
          name: player.name,
          email: player.email || "",
          seat: tournamentData.players.length + 1,
          pod: null,
          addedBy: source,
          timestamp: new Date().toISOString(),
        }

        tournamentData.players.push(newPlayer)
        tournamentData.lastUpdated = new Date().toISOString()

        return res.status(201).json({
          success: true,
          player: newPlayer,
          totalPlayers: tournamentData.players.length,
        })

      default:
        return res.status(405).json({ error: "Method not allowed" })
    }
  } catch (error) {
    console.error("API error:", error)
    return res.status(500).json({ error: "Internal server error" })
  }
}
